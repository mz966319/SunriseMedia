/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Books.sale.windows;

import Books.sale.dialogs.InvoiceItemsListJDialog;
import Books.sale.dialogs.InvoicesHistoryListJDialog;
import Books.sale.dialogs.PurchaseHistoryJDialog;
import Books.windows.MainBooksWindow;
import Database.util.SearchHelper;
import boooks.objects.SaleItem;
import boooks.objects.User;
import java.awt.Color;
import java.awt.Frame;
import java.awt.Point;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Map;
import java.util.SortedMap;
import javax.swing.JButton;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mbaiu
 */
public class SalesHistoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SalesHistoryJPanel
     */
    
    User USER;
    java.awt.Frame parent;
    private DefaultTableModel historyTableModel;
    List<SaleItem> list;
    SortedMap<String,SortedMap<String,SortedMap<String,List<SaleItem>>>> salesHistory;
    public SalesHistoryJPanel(java.awt.Frame parent, List<SaleItem> list) {
        initComponents();
        this.list=list;
        this.parent=parent;
        String[] tableHeaders2={"Map","Phone Number","Time","Employee"};
        historyTableModel=new DefaultTableModel(tableHeaders2,0){
            @Override
            public boolean isCellEditable(int row, int column) {   
                return false;
            }
        };
        this.jTableHistory.setModel(historyTableModel);
        this.jTableHistory.removeColumn(this.jTableHistory.getColumnModel().getColumn(0));
        
        fillHistoryTable();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldSearch = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableHistory = new javax.swing.JTable();

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jLabel1.setText("Phone Number:");

        jTextFieldSearch.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jTextFieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSearchActionPerformed(evt);
            }
        });

        jButtonSearch.setText("Search");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 341, Short.MAX_VALUE)
                .addComponent(jButtonSearch)
                .addGap(17, 17, 17))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButtonSearch))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jSplitPane1.setTopComponent(jPanel1);

        jTableHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableHistoryMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTableHistory);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)
        );

        jSplitPane1.setRightComponent(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTableHistoryMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableHistoryMousePressed
        Point point = evt.getPoint();
        int row = jTableHistory.rowAtPoint(point);
        if (evt.getClickCount() == 2 && jTableHistory.getSelectedRow() != -1) {
            System.out.println(jTableHistory.getModel().getValueAt(row, 0));
            
            PurchaseHistoryJDialog purchaseHistoryJDialog =new PurchaseHistoryJDialog(parent, true);
            purchaseHistoryJDialog.setMap((SortedMap<String, SortedMap<String,List<SaleItem>>>) this.jTableHistory.getModel().getValueAt(row, 0));
            purchaseHistoryJDialog.setVisible(true);
            
//            InvoicesHistoryListJDialog invoicesHistoryJDialog =new InvoicesHistoryListJDialog(parent, true);
//            invoicesHistoryJDialog.setInvoicesMap((SortedMap<String, List<SaleItem>>) this.jTableHistory.getModel().getValueAt(row, 0));
//            invoicesHistoryJDialog.setVisible(true);
        }
    }//GEN-LAST:event_jTableHistoryMousePressed

    private void jTextFieldSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSearchActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        try{
            this.jButtonSearch.setBackground(new JButton().getBackground());
        PurchaseHistoryJDialog purchaseHistoryJDialog =new PurchaseHistoryJDialog(parent, true);
        
        String toSearch=this.jTextFieldSearch.getText().replaceAll("^0+", "");
        purchaseHistoryJDialog.setMap((SortedMap<String, SortedMap<String,List<SaleItem>>>) this.salesHistory.get(toSearch));
        purchaseHistoryJDialog.setVisible(true);
        } catch (NullPointerException e) {
            this.jButtonSearch.setBackground(new Color(1f,0f,0f,.5f ));

            // handle the exception
            System.out.println("A NullPointerException occurred.");
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonSearchActionPerformed


    private void fillHistoryTable() {
        historyTableModel.setRowCount(0);
//        Collections.sort(list, new Comparator<SaleItem>() {
//
//            public int compare(SaleItem o1, SaleItem o2) {
//                // compare two instance of `Score` and return `int` as result.
//                return o2.getTime().compareTo(o1.getTime());
//            }
//        });


//        salesHistory=SaleItem.getSalesHistoryMap(list);
//        for (Map.Entry<String, SortedMap<String, List<SaleItem>>> pair : salesHistory.entrySet()) { //pair.key = purcheaseID
//            List<SaleItem> value = pair.getValue().get(pair.getValue().lastKey());
//            historyTableModel.addRow(new Object[]{pair.getValue(),pair.getKey(),value.get(value.size()-1).getTime(),SearchHelper.getUserByEmployeeID(value.get(value.size()-1).getEmployeeID()).getName()});
//        }
        
        salesHistory=SaleItem.getSalesWithGradeHistoryMap(list);
        for (Map.Entry<String, SortedMap<String, SortedMap<String,List<SaleItem>>>> pair : salesHistory.entrySet()) { //pair.key = purcheaseID
            SortedMap<String,List<SaleItem>> value = pair.getValue().get(pair.getValue().lastKey());
            historyTableModel.addRow(new Object[]{pair.getValue(),pair.getKey(),value.get(value.lastKey()).get(0).getTime(),SearchHelper.getUserByEmployeeID(value.get(value.lastKey()).get(0).getEmployeeID()).getName()});
        }
            
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable jTableHistory;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
}
