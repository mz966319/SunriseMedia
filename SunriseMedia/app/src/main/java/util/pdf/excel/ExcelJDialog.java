/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package util.pdf.excel;

import Database.util.DatabaseHelper;
import Database.util.SearchHelper;
import boooks.objects.Book;
import boooks.objects.Inventory;
import boooks.objects.User;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import util.pdf.BarcodeGenerator;
import util.pdf.GeneratePDF;

/**
 *
 * @author mbaiu
 */
public class ExcelJDialog extends javax.swing.JDialog {
    List<Book> books;
    User USER;
    /**
     * Creates new form ExcelJDialog
     */
    public ExcelJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        books=new ArrayList<>();
        this.jButtonAdd.setEnabled(false);
        this.jTextArea1.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonCreateNewFile = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButtonReadFile = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButtonCreateNewFile.setText("Create New File");
        jButtonCreateNewFile.setToolTipText("");
        jButtonCreateNewFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateNewFileActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButtonReadFile.setText("Read File");
        jButtonReadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReadFileActionPerformed(evt);
            }
        });

        jButtonAdd.setText("Add");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonReadFile)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 443, Short.MAX_VALUE)
                                .addComponent(jButtonCreateNewFile))
                            .addComponent(jScrollPane1))))
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCreateNewFile)
                    .addComponent(jButtonReadFile))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonAdd)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonReadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReadFileActionPerformed
        this.books = ExcelHelper.getBooksFromExce();
        if(!books.isEmpty()){
            String outputString="";
            int count =1;
            for(Book book: books){
                if(book.getId().isEmpty()){
                    outputString+="------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
                    outputString+="                                                                                NO ISBN\n";
                    outputString+="------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
                }
                
                outputString+="\n"+(count++)+"- "+"ID:"+book.getId()+"  Grade:"+book.getGrade()+" Subject:"+book.getSubject()+" Title:"+book.getTitle()+"  Qty:"+book.getQty()+"  Total Qty:"+book.getTotalQty()+"  Price:"+book.getCost()+"\n";
                if(book.getId().isEmpty()){
                    outputString+="------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";

                }
            }
            this.jTextArea1.setText(outputString);
            this.jButtonAdd.setEnabled(true);
        }
        else{
            this.jTextArea1.setText("Create a new file first!!");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonReadFileActionPerformed

    public void setUser(User user) {
        this.USER=user;
    }
    private void jButtonCreateNewFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateNewFileActionPerformed
        this.jButtonAdd.setEnabled(false);
        this.jTextArea1.setText("");
        ExcelHelper.createNewExcelFile();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonCreateNewFileActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        List<Book> booksThatNeedBarcode=new ArrayList<>();
        int maxRcvIndex = SearchHelper.getLastRcvIndex()+1;
        System.out.println(maxRcvIndex);
        String time = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss").format(LocalDateTime.now());
        String outputString ="-----------------------------------------------------------------------\n-----------------------------------------------------------------------\nThese books added before:\n-----------------------------------------------------------------------\n-----------------------------------------------------------------------"; 
        int count =1;

        for(Book book: this.books){
            if(book.getId().isEmpty()){
                String isbn = BarcodeGenerator.getRandomISBN();
                while(SearchHelper.getBookByID(isbn)!=null){
                    isbn = BarcodeGenerator.getRandomISBN();
                }
                book.setId(isbn);
                booksThatNeedBarcode.add(book);
            }
            Book toCheckBook = SearchHelper.getBookByID(book.getId());
            if(toCheckBook==null && SearchHelper.getBookByTitle(book.getTitle())==null){
                DatabaseHelper.addBook(book);                                 
//                int rcvIndex = 1;

                String id = UUID.randomUUID().toString();
                if(book.getQty()>0){

                    Inventory inventory = new Inventory(id,book.getId(),book.getQty(),time,USER.getId(),maxRcvIndex);
                    DatabaseHelper.addInventory(inventory);
                }
            }
            else{
                if(booksThatNeedBarcode.contains(book)){
                    booksThatNeedBarcode.remove(booksThatNeedBarcode.indexOf(book));
                    
                }
                outputString+="\n"+(count++)+"- "+"ID:"+book.getId()+"  Grade:"+book.getGrade()+" Subject:"+book.getSubject()+" Title:"+book.getTitle()+"  Qty:"+book.getQty()+"  Total Qty:"+book.getTotalQty()+"  Price:"+book.getCost()+"\n";

            }
        }
        if(!outputString.equals("Did NOT add:")){
            this.jTextArea1.setText(outputString);
        }
        
        GeneratePDF.createBarcodesPdf(booksThatNeedBarcode);
    }//GEN-LAST:event_jButtonAddActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExcelJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExcelJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExcelJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExcelJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ExcelJDialog dialog = new ExcelJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonCreateNewFile;
    private javax.swing.JButton jButtonReadFile;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
